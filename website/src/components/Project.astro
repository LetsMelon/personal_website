---
import ExternalLink from "./ExternalLink.astro";
import { Technology } from "./technology/Dynamic.astro";
import Dynamic from "./technology/Dynamic.astro";

export interface IProject {
  name: string;
  languages: Technology[];
  link?: string;
  description: string;
  descriptionLink?: { text: string; href: string }[];
}

interface Props {
  project: IProject;
}

const {
  project: { name, languages, link, description, descriptionLink },
} = Astro.props;

let descriptionWithLinks = description;
descriptionLink?.forEach((item) => {
  // TODO use external link component
  descriptionWithLinks = descriptionWithLinks.replaceAll(
    item.text,
    `<a href=${item.href} rel="noopener noreferrer" target="_blank">${item.text}</a>`
  );
});
---

<li>
  <p>
    <b>{name}</b>
    <br />
    {languages.length <= 1 ? "Technology" : "Technologies"} used: {
      languages
        .sort((a, b) => {
          const nameA = Technology[a];
          const nameB = Technology[b];
          return nameA.localeCompare(nameB);
        })
        .map((item, index) => (
          <>
            <Dynamic technology={item} />
            {index < languages.length - 1 && (
              <span class="technology-seperator">,</span>
            )}
          </>
        ))
    }
    <br />
    Link:
    {
      link ? (
        <ExternalLink name="GitHub" link={link} />
      ) : (
        <span>not public</span>
      )
    }
    <br />
    <Fragment set:html={descriptionWithLinks} />
  </p>
</li>

<style>
  .technology-seperator {
    margin-right: -0.4em;
  }
</style>
